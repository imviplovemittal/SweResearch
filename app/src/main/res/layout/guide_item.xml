<?xml version="1.0" encoding="utf-8"?>
<android.support.v7.widget.CardView xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:elevation="10dp"
    android:padding="2dp">

    <RelativeLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent">

        <ImageView
            android:id="@+id/step_image"
            android:layout_width="100dp"
            android:layout_height="100dp"
            android:layout_margin="5dp"
            android:background="@mipmap/ic_launcher" />

        <TextView
            android:id="@+id/step_heading"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginTop="5dp"
            android:layout_toEndOf="@+id/step_image"
            android:text="1. Select Your Topic"
            android:textColor="@android:color/black"
            android:textSize="20dp"
            android:textStyle="bold" />

        <TextView
            android:id="@+id/step_content"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_below="@id/step_heading"
            android:layout_margin="5dp"
            android:layout_toEndOf="@id/step_image"
            android:text="If the fragment was dynamically added at runtime within an activity into a ViewPager using a FragmentPagerAdapter then we can lookup the fragment by upgrading to a SmartFragmentStatePagerAdapter as described in the ViewPager guide. Now with the adapter in place, we can also easily access any fragments within the ViewPager using getRegisteredFragment."
            android:maxLines="4"
            android:layout_marginBottom="5dp"/>

    </RelativeLayout>
</android.support.v7.widget.CardView>